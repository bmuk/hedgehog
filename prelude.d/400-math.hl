;; This file is part of Hedgehog LISP standard library.
;; Copyright (C) 2003, 2004, 2005 Oliotalo Ltd.
;; See file LICENSE.BSD for pertinent licensing conditions.
;;
;; Authors: Lars Wirzenius <liw@iki.fi>
;;          Kenneth Oksanen <cessu@iki.fi>
;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Section: Math
;;
;; This section contains functions that have to do with mathematics.


;; Constants for the largest and smallest numbers in our integer type.

(def-syntax INT_MAX  2147483647)
(def-syntax INT_MIN -2147483648)


;; Return the largest of its arguments (which must be integers).

(def (max a ... args)
    (def (helper max items)
    	(cond
	    (nil? items)
	    	max
    	    (> (car items) max)
	    	(tailcall (helper (car items) (cdr items)))
	    (tailcall (helper max (cdr items)))))
    (helper a args))

(def-syntax (max ?a ?b)
  (do (set ?aa ?a)
      (set ?bb ?b)
      (if (> ?aa ?bb) ?aa ?bb)))

(fail-unless-equal (max 0) 0)
(fail-unless-equal (max 0 1 2) 2)
(fail-unless-equal (apply max '(0 3 1)) 3)


;; Return the smallest of its arguments (which must be integers).

(def (min a ... args)
    (def (helper min items)
    	(cond
	    (nil? items)
	    	min
    	    (< (car items) min)
	    	(tailcall (helper (car items) (cdr items)))
	    (tailcall (helper min (cdr items)))))
    (helper a args))

(def-syntax (min ?a ?b)
  (do (set ?aa ?a)
      (set ?bb ?b)
      (if (< ?aa ?bb) ?aa ?bb)))

(fail-unless-equal (min 0) 0)
(fail-unless-equal (min 0 1 2) 0)


;; Return the absolute value of the argument, which must be an integer.

(def (abs n)
    (if (< n 0)
    	(- n)
	n))

(fail-unless-equal (abs 0) 0)
(fail-unless-equal (abs 1) 1)
(fail-unless-equal (abs -1) 1)


;; Subtract two values returned by unix-gettimeofday, as usecs.  Note
;; that should the difference be over approximately four minutes,
;; integer overflow will result.

(def (unix-gettimeofday-subtract stop start)
     (+ (* 1000000 (- (car stop) (car start)))
	(- (cdr stop) (cdr start))))
