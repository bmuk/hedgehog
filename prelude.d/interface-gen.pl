# This file is part of Hedgehog LISP.
# Copyright (C) 2004, 2005 Oliotalo Ltd.
# See file LICENSE.LGPL for pertinent licensing conditions.
#
# Author: Kenneth Oksanen <cessu@iki.fi>
#

($prefix) = @ARGV;

print "/* This file has been automatically generated by interface-gen.pl. */";
print "\n\n";

while (<STDIN>) {
    chop;
    if (/^include/) {
	print "#", $_, "\n"
    } elsif (/^define (\S+)$/) {
	push @defines, $1
    } elsif (/^struct (\S+)$/) {
	push @structs, $1
    } elsif (/^field ([^.]+[ *])(\S+)\.(\S+)$/) {
	$fs = [$1, $2, $3];
	# ($t, $s, $f) = @$fs;
	push @fields, $fs
    } elsif (/^subfield ([^.]+[ *])(\S+)\.(.+)\.(\S+)$/) {
	$fs = [$1, $2, $3, $4];
	# ($t, $s, $f) = @$fs;
	push @subfields, $fs
    }
}

print "#include \"prelude.d/interface-gen.c\"\n\n";

print "int main(void)\n";
print "{\n";
foreach (@structs) {
    print "  struct $_ $_;\n";
}
print "\n";
print "  printf(\";; This file has been automatically generated\\n\");\n";
print "  printf(\";; by a program generated by interface-gen.pl\\n\\n\");\n";
print "  printf(\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\\n\");\n";
print "  printf(\";; Section: Operating system services\\n\");\n";
print "  printf(\";;\\n\");\n";
print "  printf(\";; This section contains definitions automatically generated from the operating system's C include files.\\n\");\n";
print "  printf(\"\\n\");\n";
print "\n";
print "  printf(\";; Flags defined in the C include files.  For any flag ", $prefix, "X there is a #define ", $prefix, "HAVE-X\\n\");\n";
print "  printf(\"\\n\");\n";
foreach (@defines) {
    print "#ifdef $_\n";
    print "  gen_int_flag(\"$prefix\", \"$_\", $_);\n";
    print "#endif\n";
}
foreach (@defines) {
    print "#ifdef $_\n";
    print "  gen_int_flag_have(\"$prefix\", \"$_\", $_);\n";
    print "#endif\n";
}
foreach (@structs) {
    print "  gen_struct(\"$prefix\", \"$_\", sizeof($_));\n";
    $ss = $_;
    foreach (@fields) {
	($t, $s, $f) = @$_;
	next if $s ne $ss;
	print "  gen_field(\"$prefix\", \"$s\", \"$t\", \"$f\", ";
	print "OFFSETOF($s, $f), sizeof($s.$f));\n";
    }
    foreach (@subfields) {
	($t, $s, $i, $f) = @$_;
	next if $s ne $ss;
	print "  gen_field(\"$prefix\", \"$s\", \"$t\", \"$i.$f\", ";
	print "OFFSETOF($s, $i.$f), sizeof($s.$i.$f));\n";
    }
}
print "  gen_byteorder();\n";
print "  return 0;\n";
print "}\n";
