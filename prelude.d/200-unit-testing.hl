;; This file is part of Hedgehog LISP standard library.
;; Copyright (C) 2003, 2004 Oliotalo Ltd.
;; See file LICENSE.BSD for pertinent licensing conditions.
;;
;; Author: Lars Wirzenius <liw@iki.fi>


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Section: Unit testing
;;
;; The functions in this section provide for a simple form of automatic
;; unit testing. They are used extensively within the standard library
;; implementation. Eventually it will be possible to turn running of
;; the unit tests on and off with a compiler command line option.
;; Always write your unit tests so that it doesn't matter for the
;; execution of the library or application whether they are actually
;; executed.


#ifdef DEBUG

;; Abort program unless `expr' is true.

(def-syntax (fail-unless ?expr)
   (if (not ?expr)
	(panic "\nERROR: Condition " (quote ?expr) " failed.\n")))

#else

(def-syntax (fail-unless ?expr) nil)

#endif

(fail-unless (equal? nil nil))
(fail-unless (equal? 'a 'a))
(fail-unless (equal? 42 42))
(fail-unless (equal? "hello" "hello"))
(fail-unless (equal? '(a b) '(a b)))
(fail-unless (equal? '(a (b c) d) '(a (b c) d)))

(fail-unless (not (equal? '(a (b c) d) '(a b c d))))


#ifdef DEBUG

;; Abort program unless `a' equals `b'.

(def-syntax (fail-unless-equal ?a ?b)
    (let
    	??a ?a
	(if (not (equal? ??a ?b))
	     (panic "\nERROR: " (quote ?a) " is " ??a 
			      " but should have been " (quote ?b) "\n"))))

#else

(def-syntax (fail-unless-equal ?a ?b) nil)

#endif
