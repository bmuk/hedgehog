/* This file is part of Hedgehog LISP.
 * Copyright (C) 2003, 2004, 2005, 2006 Oliotalo Ltd.
 * See file LICENSE.LGPL for pertinent licensing conditions.
 *
 * Author: Kenneth Oksanen <cessu@iki.fi>
 */


ERROR(HH_ERROR_EXPECT_CONS,
      HH_PROGRAM_FATAL,
      "Expected a (non-empty) list")

ERROR(HH_ERROR_EXPECT_CONS_OR_NIL,
      HH_PROGRAM_FATAL,
      "Expected a list or nil")

ERROR(HH_ERROR_EXPECT_STRING,
      HH_PROGRAM_FATAL,
      "Expected a string")

ERROR(HH_ERROR_EXPECT_STRING_LIST,
      HH_PROGRAM_FATAL,
      "Expected a list of strings")

ERROR(HH_ERROR_EXPECT_NONEMPTY_STRING,
      HH_PROGRAM_FATAL,
      "Expected a non-empty string")

ERROR(HH_ERROR_EXPECT_STRING_OR_INT,
      HH_PROGRAM_FATAL,
      "Expected a string or integer")

ERROR(HH_ERROR_EXPECT_INT,
      HH_PROGRAM_FATAL,
      "Expected an integer")

ERROR(HH_ERROR_EXPECT_SHORT,
      HH_PROGRAM_FATAL,
      "Expected a small integer")

ERROR(HH_ERROR_EXPECT_POSITIVE,
      HH_PROGRAM_FATAL,
      "Expected a positive integer")

ERROR(HH_ERROR_EXPECT_FN,
      HH_PROGRAM_FATAL,
      "Expected a function")

ERROR(HH_ERROR_EXPECT_SYMBOL,
      HH_PROGRAM_FATAL,
      "Expected a symbol")

ERROR(HH_ERROR_EXPECT_TUPLE,
      HH_PROGRAM_FATAL,
      "Expected a tuple (of sufficient width)")

ERROR(HH_ERROR_TOO_WIDE_TUPLE,
      HH_PROGRAM_FATAL,
      "Tuple too wide")

ERROR(HH_ERROR_EXPECT_AVL,
      HH_PROGRAM_FATAL,
      "Expected an AVL-tree node")

ERROR(HH_ERROR_PANIC,
      HH_PROGRAM_FATAL,
      "(panic ...) called")

ERROR(HH_ERROR_BAD_BASE,
      HH_PROGRAM_FATAL,
      "`itoa' or `atoi' given base outside range from 2 to 36")

ERROR(HH_ERROR_BAD_CHAR,
      HH_PROGRAM_FATAL,
      "`chr' given an integer less than zero or over 255")

ERROR(HH_ERROR_WRONG_ARGS,
      HH_PROGRAM_FATAL,
      "Incorrect number of arguments")

ERROR(HH_ERROR_UNCAUGHT_EXCEPTION,
      HH_PROGRAM_FATAL,
      "Uncaught exception")

ERROR(HH_ERROR_HEAP_FULL,
      HH_PROGRAM_FATAL,
      "Heap exhausted")

ERROR(HH_ERROR_MALLOC,
      HH_SYSTEM_FATAL,
      "Memory allocation failed")

ERROR(HH_ERROR_INITIAL_MALLOC,
      HH_PROGRAM_NORUN,
      "Initial memory allocation failed")

ERROR(HH_ERROR_MALLOC_MAY_FAIL,
      HH_SYSTEM_WARNING,
      "Non-essential memory allocation failed")

ERROR(HH_ERROR_PROGRAM_CORRUPT,
      HH_PROGRAM_NORUN,
      "Program corrupted")

ERROR(HH_ERROR_PROGRAM_WRONG_VERSION,
      HH_PROGRAM_NORUN,
      "Program of wrong version")

ERROR(HH_ERROR_PROGRAM_EXITED,
      HH_PROGRAM_NORUN,
      "Program exited")

ERROR(HH_ERROR_PROGRAM_DID_EXEC,
      HH_PROGRAM_NORUN,
      "Program replaced its byte code file with a new one")

#undef ERROR
